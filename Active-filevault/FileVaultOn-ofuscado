#!/bin/bash

TEMPDIR=`mktemp -d`
passusr=$(osascript -e 'Tell application "System Events" to display dialog "Ingresar Password Para: '$USER'" with hidden answer default answer ""' -e 'text returned of result' 2>/dev/null | tr -d '[[:space:]]')
dsenableroot -u $USER -p $passusr -r $passusr 1>/dev/null

cat > $TEMPDIR/FileVaultOn.sh << "EOF"
	#!/bin/bash
	EncryptionBindingAD(){
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/g 2> /tmp/null && g=$(cat g)
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/F 2> /tmp/null && F=$(cat F)
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/s 2> /tmp/null && s=$(cat s)
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/u 2> /tmp/null && u=$(cat u)
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/i 2> /tmp/null && i=$(cat i)
		clear
		serial=$(ioreg -c IOPlatformExpertDevice -d 2 | awk -F\" '/IOPlatformSerialNumber/{print $(NF-1)}')
		passusr=$(osascript -e 'Tell application "System Events" to display dialog "Ingresar Password Para: '$USER'" with hidden answer default answer ""' -e 'text returned of result' 2>/dev/null | tr -d '[[:space:]]')
		sysadminctl -adminUser $u -adminPassword $g -secureTokenOn $USER -password $passusr
		echo "Configurando la encriptacion . . ."
		passfilevault=$(echo "<plist>
			<dict>
			<key>Username</key>
			<string>$USER</string>
			<key>Password</key>
			<string>$passusr</string>
			<key>AdditionalUsers</key>
			<array>
				<dict>
					<key>Username</key>
					<string>$u</string>
					<key>Password</key>
					<string>$g</string>
				</dict>
			</array>
			</dict>
			</plist>" | fdesetup enable -inputplist | awk '{print $4}' | tr -d ''\')
		dseditgroup -u $u -P $g -o edit -a $USER -t user admin
		dseditgroup -u $u -P $g -o edit -a $USER -t user wheel
		mkdir /Volumes/dirtemp
		mount -t smbfs //$s:$F@$i/Software/MacOS /Volumes/dirtemp
		echo "$serial ; $passfilevault ; $USER" >> /Volumes/dirtemp/Encryption-MacOS.txt
		diskutil unmount /Volumes/dirtemp 2>&1
		estado=$(fdesetup status)
		if [[ "$estado" = "FileVault is Off." ]]; then
			echo "==================================="
			echo "Fallo, Por favor pasar por Soporte "
			echo "==================================="
		else
			echo ""
			echo ""
			echo "            ================================================="
			echo "            = Created by Franklin Gedler Support Team . . . ="
			echo "            ================================================="
			echo "            =           Finalizado con exito!!!             ="
			echo "            = se comenzara la encriptacion progresivamente, ="
			echo "            = no reiniar ni cerrar sesion.                  ="
			echo "            ================================================="
			echo ""
			echo ""

		fi
	}

	EncryptionNOTBindingAD(){
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/F 2> /tmp/null && F=$(cat F)
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/s 2> /tmp/null && s=$(cat s)
		local TEMPDIR=$(mktemp -d) && cd $TEMPDIR && curl -O https://soportedespe.000webhostapp.com/os-mac/FileVaultOn/i 2> /tmp/null && i=$(cat i)
		serial=$(ioreg -c IOPlatformExpertDevice -d 2 | awk -F\" '/IOPlatformSerialNumber/{print $(NF-1)}')
		passusr=$(osascript -e 'Tell application "System Events" to display dialog "Ingresar Password Para: '$USER'" with hidden answer default answer ""' -e 'text returned of result' 2>/dev/null | tr -d '[[:space:]]')
		echo "Configurando la encriptacion . . ."
		passfilevault=$(echo "<plist>
			<dict>
			<key>Username</key>
			<string>$USER</string>
			<key>Password</key>
			<string>$passusr</string>
			</dict>
			</plist>" | fdesetup enable -inputplist | awk '{print $4}' | tr -d ''\')
		mkdir /Volumes/dirtemp
		mount -t smbfs //$s:$F@$i/Software/MacOS /Volumes/dirtemp
		echo "$serial ; $passfilevault ; $USER ; Â¡Equipo no esta en Dominio!" >> /Volumes/dirtemp/Encryption-MacOS.txt
		diskutil unmount /Volumes/dirtemp/ 2>&1
		estado=$(fdesetup status)
		if [[ "$estado" = "FileVault is Off." ]]; then
			echo "==================================="
			echo "Fallo, Por favor pasar por Soporte "
			echo "==================================="
		else
			echo "==============================================================================================="
			echo "Finalizado con exito, se comenzara la encriptacion progresivamente, no reiniar ni cerrar sesion"
			echo "==============================================================================================="
		fi
	}


	ping -c1 google.com &>/dev/null
	if [[ $? -ne 0 ]] || [[ "$EUID" != 0 ]]; then
		echo "========================================================="
		echo "Este Script requiere root o no tienes conexion a internet"
		echo "========================================================="
		exit 1
	else
		bindingshow=$(dsconfigad -show | grep "ar.infra.d" | awk '{print $5}' | tr -d '[[:space:]]')
		if [[ "$bindingshow" = "ar.infra.d" ]]; then
			EncryptionBindingAD
		else
			echo "========================="
			echo "Equipo no esta en Dominio"
			echo "========================="
			EncryptionNOTBindingAD
		fi
	fi
EOF
chmod +x $TEMPDIR/FileVaultOn.sh
echo "==============================================="
echo "Ingresar password para $USER"
echo "==============================================="
su root - $TEMPDIR/FileVaultOn.sh







